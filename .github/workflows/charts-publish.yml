name: Chart Publish

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:

permissions:
  contents: read

jobs:
  publish:
    name: Publish Modified Helm Charts
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
       github.event.action == 'closed' &&
       github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      # Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0

      # Add external Helm repositories required by chart dependencies
      - name: Add external Helm repositories
        run: |
          helm repo add openfga https://openfga.github.io/helm-charts --force-update
          helm repo update

      # Install yq
      - name: Install yq
        run: |
          sudo wget -qO /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.30.2/yq_linux_amd64
          sudo chmod +x /usr/bin/yq

      # Add dependency chart repos
      - name: Add dependency chart repos
        run: |
          for chart in charts/*; do
            if [[ -f "$chart/Chart.yaml" ]]; then
              helm dependency update "$chart"
            fi
          done

      # Configure Git
      - name: Configure Git
        run: | # $GITHUB_ACTOR: last user who trigger the action
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # # Lint the charts
      # - name: Fetch current Chart Index from gh-pages
      #   run: |
      #     git checkout origin/gh-pages index.yaml

      # Run Chart Releaser
      - name: Run Chart Releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          config: "configs/cr.yml"
          packages_with_index: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 1
          persist-credentials: true

      - name: Configure Git in gh-pages
        working-directory: gh-pages
        run: |
          git config user.name  "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Ensure index.yaml exists (first publish guard)
        working-directory: gh-pages
        run: |
          if [[ ! -f index.yaml ]]; then
            echo "No index.yaml on gh-pages yet. Creating empty index to proceed."
            helm repo index ./
          fi

      - name: Install helm-repo-html plugin
        run: |
          helm plugin install https://github.com/halkeye/helm-repo-html

      - name: Generate index.html from index.yaml
        working-directory: gh-pages
        run: |
          # erzeugt index.html basierend auf index.yaml
          helm repo-html

          git add index.html

          if git diff --cached --quiet; then
            echo "No changes to index.html"
          else
            git commit -m "chore(helm): update index.html from index.yaml"
            git push origin gh-pages
          fi

      # Push OCI Helm Chart Packages to GHCR
      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push OCI Helm Chart Packages to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" oci://ghcr.io/${{ github.repository }}
          done
